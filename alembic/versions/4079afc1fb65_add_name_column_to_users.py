"""add name column to users

Revision ID: 4079afc1fb65
Revises: 
Create Date: 2025-05-10 14:30:20.690417

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4079afc1fb65'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_keywords_id', table_name='keywords')
    # op.drop_index('ix_keywords_word', table_name='keywords')
    # op.drop_table('keywords')
    # op.drop_index('ix_papers_id', table_name='papers')
    # op.drop_table('papers')
    # op.drop_index('ix_topics_id', table_name='topics')
    # op.drop_index('ix_topics_name', table_name='topics')
    # op.drop_table('topics')
    # op.drop_index('ix_login_attempts_id', table_name='login_attempts')
    # op.drop_index('ix_login_attempts_username', table_name='login_attempts')
    # op.drop_table('login_attempts')
    # op.drop_table('paper_keyword')
    # op.drop_index('ix_summaries_id', table_name='summaries')
    # op.drop_table('summaries')
    op.add_column('users', sa.Column('name', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'name')
    op.create_table('summaries',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('paper_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['paper_id'], ['papers.id'], name='summaries_paper_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='summaries_pkey')
    )
    op.create_index('ix_summaries_id', 'summaries', ['id'], unique=False)
    op.create_table('paper_keyword',
    sa.Column('paper_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('keyword_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('login_attempts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='login_attempts_pkey')
    )
    op.create_index('ix_login_attempts_username', 'login_attempts', ['username'], unique=False)
    op.create_index('ix_login_attempts_id', 'login_attempts', ['id'], unique=False)
    op.create_table('topics',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('topics_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='topics_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_topics_name', 'topics', ['name'], unique=True)
    op.create_index('ix_topics_id', 'topics', ['id'], unique=False)
    op.create_table('papers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('authors', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('journal', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('abstract', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('github_link', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name='papers_topic_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='papers_pkey')
    )
    op.create_index('ix_papers_id', 'papers', ['id'], unique=False)
    op.create_table('keywords',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('word', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='keywords_pkey')
    )
    op.create_index('ix_keywords_word', 'keywords', ['word'], unique=True)
    op.create_index('ix_keywords_id', 'keywords', ['id'], unique=False)
    # ### end Alembic commands ###
